{"version":3,"sources":["components/feedback/FeedbackOptions/FeedbackOptions.module.css","components/feedback/Section/Section.module.css","components/feedback/Statistics/Statistics.module.css","components/feedback/Notification/Notification.module.css","components/feedback/Section/Section.jsx","components/feedback/FeedbackOptions/FeedbackOptions.jsx","components/feedback/Statistics/Statistics.jsx","components/feedback/Notification/Notification.jsx","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","wraper","FeedbackOptions","options","onLeaveFeedback","getNameOfItem","namesOfItems","Object","keys","list","map","item","onClick","button","Statistics","props","good","neutral","bad","total","positivePercentage","statisticList","Notification","message","text","App","state","setActiveItem","setState","PrevState","name","slice","toUpperCase","toLowerCase","countTotalFeedback","values","reduce","acc","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,KAAO,8BAA8B,OAAS,kC,oBCAhED,EAAOC,QAAU,CAAC,OAAS,0B,gBCA3BD,EAAOC,QAAU,CAAC,cAAgB,oC,gBCAlCD,EAAOC,QAAU,CAAC,KAAO,6B,qKCiBVC,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACI,sBAAKC,UAAWC,IAAEC,OAAlB,UACA,6BAAKJ,IACJC,M,gBCiBQI,MAtBf,YAAuE,IAA5CC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,gBAAiBC,EAAiB,EAAjBA,cAC7CC,EAAeC,OAAOC,KAAKL,GAEjC,OACE,oBAAIJ,UAAWC,IAAES,KAAjB,SACGH,EAAaI,KAAI,SAAAC,GAAI,OACpB,6BACE,yBAAQC,QAAS,kBAAMR,EAAgBO,IAAOZ,UAAWC,IAAEa,OAA3D,UACGR,EAAcM,GAAO,QAFjBA,S,gBCqBFG,MA3Bf,SAAoBC,GAAQ,IAClBC,EAAkDD,EAAlDC,KAAMC,EAA4CF,EAA5CE,QAASC,EAAmCH,EAAnCG,IAAKC,EAA8BJ,EAA9BI,MAAOC,EAAuBL,EAAvBK,mBACnC,OACE,qBAAIrB,UAAWC,IAAEqB,cAAjB,UACE,6BACE,uCAAUL,OAEZ,6BACE,0CAAaC,OAEf,6BACE,sCAASC,OAEX,6BACE,wCAAWC,OAEb,6BACE,oDAAuBC,EAAvB,a,iBCTOE,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,mBAAGxB,UAAWC,IAAEwB,KAAhB,SAAuBD,KCuDjBE,E,4MApDbC,MAAQ,CACNV,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPS,cAAgB,SAAAhB,GACd,EAAKiB,UAAS,SAAAC,GAAS,sBACpBlB,EAAOkB,EAAUlB,GAAQ,O,EAI9BN,cAAgB,SAAAyB,GACd,MAAM,GAAN,OAAUA,EAAKC,MAAM,EAAG,GAAGC,eAA3B,OAA2CF,EAAKC,MAAM,GAAGE,gB,EAG3DC,mBAAqB,WACnB,OAAO3B,OAAO4B,OAAO,EAAKT,OAAOU,QAAO,SAACC,EAAK1B,GAAN,OAAe0B,EAAM1B,IAAM,I,EAGrE2B,gCAAkC,WAChC,OAAOC,KAAKC,MAAyB,IAAlB,EAAKd,MAAMV,KAAc,EAAKkB,uB,4CAGnD,WACE,OACE,qCACE,cAAC,EAAD,CAASrC,MAAM,wBAAf,SACE,cAAC,EAAD,CACEM,QAASsC,KAAKf,MACdtB,gBAAiBqC,KAAKd,cACtBtB,cAAeoC,KAAKpC,kBAGxB,cAAC,EAAD,CAASR,MAAM,aAAf,SACiC,IAA9B4C,KAAKP,qBACJ,cAAC,EAAD,CAAcX,QAAQ,sBAEtB,cAAC,EAAD,CACEP,KAAMyB,KAAKf,MAAMV,KACjBC,QAASwB,KAAKf,MAAMT,QACpBC,IAAKuB,KAAKf,MAAMR,IAChBC,MAAOsB,KAAKP,qBACZd,mBAAoBqB,KAAKH,6C,GA5CrBI,aCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.dcbd2837.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackOptions_list__2lc3O\",\"button\":\"FeedbackOptions_button__3MkKi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wraper\":\"Section_wraper__CSRfl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticList\":\"Statistics_statisticList__3LwBv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__3fw1_\"};","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n      <div className={s.wraper}>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;","import PropTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nfunction FeedbackOptions({ options, onLeaveFeedback, getNameOfItem }) {\r\n  const namesOfItems = Object.keys(options);\r\n\r\n  return (\r\n    <ul className={s.list}>\r\n      {namesOfItems.map(item => (\r\n        <li key={item}>\r\n          <button onClick={() => onLeaveFeedback(item)} className={s.button}>\r\n            {getNameOfItem(item)}{' '}\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.objectOf(PropTypes.number).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n  getNameOfItem: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;","import PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\n\r\nfunction Statistics(props) {\r\n  const { good, neutral, bad, total, positivePercentage } = props;\r\n  return (\r\n    <ul className={s.statisticList}>\r\n      <li>\r\n        <p>Good: {good}</p>\r\n      </li>\r\n      <li>\r\n        <p>Neutral: {neutral}</p>\r\n      </li>\r\n      <li>\r\n        <p>Bad: {bad}</p>\r\n      </li>\r\n      <li>\r\n        <p>Total: {total}</p>\r\n      </li>\r\n      <li>\r\n        <p>Positive feedback: {positivePercentage}%</p>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  props: PropTypes.objectOf(PropTypes.number).isRequired,\r\n};\r\n\r\nexport default Statistics;","import PropTypes from 'prop-types';\r\nimport s from './Notification.module.css';\r\n\r\nfunction Notification({ message }) {\r\n  return <p className={s.text}>{message}</p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;","import React, { Component } from 'react';\nimport Section from './components/feedback/Section/Section';\nimport FeedbackOptions from './components/feedback/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/feedback/Statistics/Statistics';\nimport Notification from './components/feedback/Notification/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  setActiveItem = item => {\n    this.setState(PrevState => ({\n      [item]: PrevState[item] + 1,\n    }));\n  };\n\n  getNameOfItem = name => {\n    return `${name.slice(0, 1).toUpperCase()}${name.slice(1).toLowerCase()}`;\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((acc, item) => acc + item, 0);\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.round((this.state.good * 100) / this.countTotalFeedback());\n  };\n\n  render() {\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.setActiveItem}\n            getNameOfItem={this.getNameOfItem}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() === 0 ? (\n            <Notification message=\"No feedback given\"></Notification>\n          ) : (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}